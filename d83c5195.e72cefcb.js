(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{89:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return l}));var r=a(3),n=a(7),c=(a(0),a(97)),i={id:"str",title:"String",sidebar_label:"String",hide_title:!0},s={unversionedId:"java/str",id:"java/str",isDocsHomePage:!1,title:"String",description:"String (Java.lang.String)",source:"@site/docs/java/string.md",slug:"/java/str",permalink:"/InfoSite/docs/java/str",editUrl:"https://github.com/akashghanate/InfoSite/docs/java/string.md",version:"current",sidebar_label:"String",sidebar:"docs",previous:{title:"general",permalink:"/InfoSite/docs/java/general"},next:{title:"String Buffer (String Maipulation)",permalink:"/InfoSite/docs/java/sb"}},b=[{value:"String (Java.lang.String)",id:"string-javalangstring",children:[{value:"Instantiate",id:"instantiate",children:[]},{value:"Methods (s)",id:"methods-s",children:[]}]}],p={toc:b};function l(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"string-javalangstring"},"String (Java.lang.String)"),Object(c.b)("p",null,"Immutable Datatype"),Object(c.b)("h3",{id:"instantiate"},"Instantiate"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String s;\n")),Object(c.b)("h3",{id:"methods-s"},"Methods (s)"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"contains()")," - returns true/ false if subString is present in String"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"s.contains(String subString);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"indexOf()")," - returns the index of the subString/ character"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"int n = s.indexOf(String subString);\nint n = s.indexOf(char ch);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"replace()")," - replace old char wth new char for all occurance of old char"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"s.replace(char old,char new);\n")),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"replaceFirst()")," - replace old char wth new char for first occurance of old char",Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"s.replaceFirst(char old,char new);\n"))))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"matches()")," - tells whether or not the string matches the given regular expression, returns boolean"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"s.matches('regex');\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"split()")," - split string at matching regex into string array"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String[] array = s.split('regex');\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"startsWith()")," - method determines whether a string begins with the characters of a specified string, returning true or false"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"s.startsWith(String prefix);\ns.startsWith(String prefix,int position); // starts searching from the position index\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"endsWith()")," - method determines whether a string ends with the characters of a specified string, returning true or false"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"s.endsWith(String suffix);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"toLowerCase()")," - converts string to lowercase string"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String str = s.toLowerCase();\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"toUpperCase()")," - converts string to uppercase string"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String str = s.toUpperCase();\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"trim()")," - removes leading and training ",Object(c.b)("em",{parentName:"p"},"whitespace")),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String str = s.trim();\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"join()")," - returns string joined with given ",Object(c.b)("em",{parentName:"p"},"delimiter"),"  "),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String str = s.join(CharSequence delimiter,CharSequence elements); //elements here are strings\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"compareTo()")," - returns int value after comparing two strings lexographically"),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"int n = s1.compareTo(s2);\n")))),Object(c.b)("hr",null),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Character.isLetter()")," - returns true/false if char is Letter",Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"Character.isLetter(char ch);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Character.isDigit()")," - returns true/false if char is digit",Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"Character.isDigit(char ch);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Character.isWhitespace()")," - returns true/false if char is space",Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"Character.isWhitespace(char ch);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Character.isUpperCase()")," - returns true/false if char is a Uppercase letter",Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"Character.isUpperCase(char ch);\n"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Character.isLowerCase()")," - returns true/false if char is a Lowercase letter",Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"Character.isLowerCase(char ch);\n")))))}l.isMDXComponent=!0},97:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return g}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),l=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=l(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},j=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),o=l(a),j=r,g=o["".concat(i,".").concat(j)]||o[j]||m[j]||c;return a?n.a.createElement(g,s(s({ref:t},p),{},{components:a})):n.a.createElement(g,s({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,i=new Array(c);i[0]=j;var s={};for(var b in t)hasOwnProperty.call(t,b)&&(s[b]=t[b]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<c;p++)i[p]=a[p];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"}}]);