(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{69:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),l=(a(0),a(94)),i={id:"ll",title:"Linked List",sidebar_label:"Linked List",hide_title:!0},c={unversionedId:"java/ll",id:"java/ll",isDocsHomePage:!1,title:"Linked List",description:"Linked List (java.util.collections)",source:"@site/docs/java/LinkedList.md",slug:"/java/ll",permalink:"/InfoSite/docs/java/ll",editUrl:"https://github.com/akashghanate/InfoSite/docs/java/LinkedList.md",version:"current",sidebar_label:"Linked List",sidebar:"docs",previous:{title:"Utility Methods",permalink:"/InfoSite/docs/java/ul"},next:{title:"regex",permalink:"/InfoSite/docs/java/regex"}},o=[{value:"Linked List (java.util.collections)",id:"linked-list-javautilcollections",children:[{value:"Instantiate",id:"instantiate",children:[]},{value:"Methods (ll)",id:"methods-ll",children:[]}]}],s={toc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"linked-list-javautilcollections"},"Linked List (java.util.collections)"),Object(l.b)("p",null,"Linked List is a part of the Collection framework present in java.util package. This class is an implementation of the LinkedList data structure which is a linear data structure where the elements are not stored in contiguous locations and every element is a separate object with a data part and address part. The elements are linked using pointers and addresses. Each element is known as a node."),Object(l.b)("h3",{id:"instantiate"},"Instantiate"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"LinkedList<datatype> ll = new LinkedList<datatype>();\n")),Object(l.b)("h3",{id:"methods-ll"},"Methods (ll)"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"add()")," - adding element to Linked List"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"ll.add(element);\nll.add(int index, element); //add element at position *index*\nll.addLast(element); //add element at last of list\nll.addFirst(element); //add element at first of list\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"remove()")," - removing element from Linked List"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"ll.remove(element);\nll.remove(int index); //remove element from position *index*\nll.removeLast(element); //remove element from last of list\nll.removeFirst(element); //remove element from first of list\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"size()")," - returns size of list"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"int n = ll.size();\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"contains()")," - returns true/ false if element is present in list"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"int n = ll.contains(element);\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"set()")," - replace element at ",Object(l.b)("em",{parentName:"p"},"index")," "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"ll.set(int index, newElement);\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"get()")," - returns element at ",Object(l.b)("em",{parentName:"p"},"index")," of list"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"datatype n = ll.get(int index);\ndatatype n = ll.getFirst(int index);\ndatatype n = ll.getLast(int index);\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Stack operations"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"push()")," - push element to the list",Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"ll.push(element);\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"pop()")," - pop top element from the list and returns the element",Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"datatype n = ll.pop();\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"peek()")," - returns top element of the list without removing ",Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"datatype n = ll.peek();\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"isEmpty()")," - is used to check if a list is empty or not, returns true/false",Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"ll.isEmpty();\n")))))))}p.isMDXComponent=!0},94:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),b=p(a),d=n,u=b["".concat(i,".").concat(d)]||b[d]||m[d]||l;return a?r.a.createElement(u,c(c({ref:t},s),{},{components:a})):r.a.createElement(u,c({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<l;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);