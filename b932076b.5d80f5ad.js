(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{83:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return b}));var r=a(3),n=a(7),c=(a(0),a(99)),i={id:"regex",sidebar_label:"Regex",hide_title:!0},l={unversionedId:"java/regex",id:"java/regex",isDocsHomePage:!1,title:"regex",description:"Regex",source:"@site/docs/java/regex.md",slug:"/java/regex",permalink:"/InfoSite/docs/java/regex",editUrl:"https://github.com/akashghanate/InfoSite/tree/master/docs/java/regex.md",version:"current",sidebar_label:"Regex",sidebar:"docs",previous:{title:"map",permalink:"/InfoSite/docs/java/collections/map"},next:{title:"Tips & Tricks",permalink:"/InfoSite/docs/java/tips"}},o=[{value:"Regex",id:"regex",children:[{value:"Character Class",id:"character-class",children:[]},{value:"Anchors",id:"anchors",children:[]},{value:"Quantifiers",id:"quantifiers",children:[]},{value:"Sets &amp; Ranges",id:"sets--ranges",children:[]},{value:"flags",id:"flags",children:[]}]}],s={toc:o};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"regex"},"Regex"),Object(c.b)("h3",{id:"character-class"},"Character Class"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\d")," - matches a digit or a character from 0 to 9"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\s")," - match a whitespace symbol such a space, a tab (\\t), a newline (\\n), etc."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\w")," - w stands for ",Object(c.b)("em",{parentName:"li"},"word character"),". It matches the ASCII character ","[A-Za-z0-9_]"," including Latin alphabets, digits, and the underscore ( _ )",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("h3",Object(r.a)({parentName:"li"},{id:"inverse-classes"}),"Inverse Classes"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\D")," - matches any character except digits e.g., a letter."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\S")," - matches any character except whitespace e.g., a letter"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\W")," - matches any character except word character e.g., non-Latin letter or space."))))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"dot( . )")," - is a special character class that matches any character except a newline.")),Object(c.b)("h3",{id:"anchors"},"Anchors"),Object(c.b)("p",null,"Anchors have special meaning in regular expressions. They do not match any character. Instead, they match a position before or after characters:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"^")," - The ",Object(c.b)("strong",{parentName:"li"},"caret")," anchor matches the ",Object(c.b)("em",{parentName:"li"},"beginning")," of the text."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"$")," - The ",Object(c.b)("strong",{parentName:"li"},"dollar")," anchor matches the ",Object(c.b)("em",{parentName:"li"},"end")," of the text."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"\\b")," - The ",Object(c.b)("strong",{parentName:"li"},"word boundary")," anchor matches the position",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"The following three positions that qualify as word boundaries:",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Before the first character in a string if the first character is a word character."),Object(c.b)("li",{parentName:"ul"},"After the last character in a string if the last character is a word character."),Object(c.b)("li",{parentName:"ul"},"Between two characters in a string if one is a word character and the other is not.")))))),Object(c.b)("h3",{id:"quantifiers"},"Quantifiers"),Object(c.b)("p",null,"Quantifiers match a number of instances of a character, group, or character class in a string."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Exact count ",Object(c.b)("strong",{parentName:"li"},"{n}")," - A number in curly braces {n} is the simplest quantifier. When you append it to a character or character class, it specifies how many characters or character classes you want to match."),Object(c.b)("li",{parentName:"ul"},"The range ",Object(c.b)("strong",{parentName:"li"},"{n,m}")," - The range matches a character or character class from n to m times."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"+")," - The quantifier ",Object(c.b)("em",{parentName:"li"},"+")," means one or more, which is equivalent to ",Object(c.b)("em",{parentName:"li"},"{1, }")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"?")," - The quantifier ",Object(c.b)("em",{parentName:"li"},"?")," means zero or one, which is equivalent to ",Object(c.b)("em",{parentName:"li"},"{0,1}")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"*")," - The quantifier ","*"," means zero or more, which is equivalent to ",Object(c.b)("em",{parentName:"li"},"{0, }"))),Object(c.b)("h3",{id:"sets--ranges"},"Sets & Ranges"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"[...]")," - The square brackets searches for any character in a set. ",Object(c.b)("br",null),"For example, ","[aeiou]"," matches any of the five characters: 'a', 'e', 'i', 'o' and 'u'. The ","[...]"," is called a set."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"[a-zA-z]"),",",Object(c.b)("strong",{parentName:"li"},"[0-9]")," - The square brackets can contain character ranges.",Object(c.b)("br",null)," For example, ","[a-z]"," is a character range from a to z. And ","[0-9]"," is a digit from 0 to 9."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"[ ^abc]")," - To negate a range, you use the excluding range like: ","[ ^...]",". ",Object(c.b)("br",null),"\nFor example, ","[ ^0-9]"," matches any character except a digit. It is the same as \\D")),Object(c.b)("h3",{id:"flags"},"flags"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"g")," - global flag, when you add 'g' the regular expression will search all occurences, not just the first"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"m")," - flag to enable the multiline mode.")),Object(c.b)("p",null,"In practice, you often combine the character classes to form a powerful match."))}b.isMDXComponent=!0},99:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),b=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=b(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=b(a),m=r,h=p["".concat(i,".").concat(m)]||p[m]||u[m]||c;return a?n.a.createElement(h,l(l({ref:t},s),{},{components:a})):n.a.createElement(h,l({ref:t},s))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,i=new Array(c);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<c;s++)i[s]=a[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);